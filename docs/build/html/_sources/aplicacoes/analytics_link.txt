Analytics de Links
==================

.. include:: ../times/portalpadroes.rst

O Google Analytics permite que seus usuários registrem eventos nas páginas
e não somente visitas. Um bom exemplo de evento é quando um usuário clica um
link de saída da sua página.

Para a home da globo.com esta é uma informação bastante relevante. É necessário
saber em qual área da página o link foi clicado e qual o produto correspondente
deste link.

Cada produto pode ter necessidades de agrupamento de estatísticas de cliques
diversas. Por este motivo a aplicação de Analytics de Links permite que os
usuários do libby registrem as categorias (chaves) que quiserem para
agrupamento.

Estes agrupamentos podem ser vistos depois no site do google analytics
correspondente do produto.

Instalação
----------

Para utilizar esta funcionalidade do libby, inclua a seguinte app como INSTALLED_APPS:

.. code-block:: python

    INSTALLED_APPS = [
        #...
        'libby.aplicacoes.analytics_links',
        #...
    ]

É necessária ainda a inclusão do script do analytics de links, conforme
abaixo::

    <script src="/media/libby/analytics_links/js/libby.analytics_links.js"></script>

Customizando
============

A aplicação de analytics de links permite que os produtos criem customizações
de eventos do google analytics (`event tracking <http://code.google.com/apis/analytics/docs/tracking/eventTrackerGuide.html>`_).

O código de tracking do google analytics tem o formato de
"out/$arg0/$arg1/$arg2/url", onde cada argumento é provido pelo produto.

A home da globo.com, por exemplo, utiliza o seguinte formato::

    Template: out/$area/$produto/$url

    onde $area é a área em que está o link,

    e $produto é a "cor" do link, ou seja, para qual produto o link leva

    e $url é a url do link clicado.

    Exemplo:

    out/A/E - Significa um link da área principal do topo
    de esportes.

Incluindo meus argumentos na chave do analytics
-----------------------------------------------

Para que a chave seja a desejada, é necessário o registro de funções que façam
essa análise. No caso da home, por exemplo, verificamos área e produto,
conforme abaixo::

    //método que obtém a área do link
    //e caso tenha sucesso registra ela no tracking code.
    var getArea = function(context) {
        var analyticsDiv = context.link.parents('div.analytics-area:first');
        if (analyticsDiv.length) {
            context.trackingCode.push(analyticsDiv.attr('id').replace('analytics-', ''));
        }
    };

    //método que obtém o produto do link
    //e caso tenha sucesso registra ele no tracking code.
    var getProduct = function(context) {
        var classesByProduct = {
            "glb-hl-style-noticia": "N",
            "glb-hl-style-esporte": "E",
            "glb-hl-style-entretenimento": "M"
        }
        var productElement = context.link.parents('.chamada:first');

        if (productElement.length) {
            for (key in classesByProduct) {
                if (productElement.hasClass(key)) {
                    context.trackingCode.push(classesByProduct[key]);
                    break;
                }
            }
        }
    };

    libby.analytics.links.register(getArea);
    libby.analytics.links.register(getProduct);

Este passo é necessário para poder gerar a chave correta para o google
analytics.
